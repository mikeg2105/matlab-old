function [cux, cuy, cuz]=curelation(nx,ny,nz,...
                    uxx,uxy,uxz,uyy,uyz,uzz,...
                    gxx,gxy,gxz,gyy,gyz,gzz,...
                    dxuxx,dxuxy,dxuxz,dxuyy,dxuyz,dxuzz,...
                    dyuxx,dyuxy,dyuxz,dyuyy,dyuyz,dyuzz,...
                    dzuxx,dzuxy,dzuxz,dzuyy,dzuyz,dzuzz)
%[cux, cuy, cuz]=curelation(nx,ny,nz,...
%                    uxx,uxy,uxz,uyy,uyz,uzz,...
%                    gxx,gxy,gxz,gyy,gyz,gzz,...
%                    dxuxx,dxuxy,dxuxz,dxuyy,dxuyz,dxuzz,...
%                    dyuxx,dyuxy,dyuxz,dyuyy,dyuyz,dyuzz,...
%                    dzuxx,dzuxy,dzuxz,dzuyy,dzuyz,dzuzz)
%  Detailed explanation goes here
%==============================================================================
%
%  [ROUTINE NAME] Curelation
%  [AUTHOR] Joan Masso, NCSA & UIB
% 
%  [PURPOSE] Compute the vector $\Gamma^i$ based on the metric and
%            derivatives and the algebraic relation that holds at
%            the initial time. 
%  [WARNING] Only valid for the initial time, when the lapse is 
%            spatially constant and the derivatives are zero.
%
%  [ARGUMENTS] 
%     [INPUT]
%        nx,ny,nz   : grid sizes of the 3d cube.
%        uxx,uxy,...: Contravarian ("up") metric tensor
%        gxx,gxy,...: Covariant ("down")  metric tensor
%        dxuxx,.....: All derivatives of the "up" metric tensor.
%     [OUTPUT]
%        cux,cuy,cuz: Momemtum related vector $\Gamma^i$
% 
%  [CALLED BY]  Initial
%
%<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
       cux=zeros(nx,ny,nz);
       cuy=zeros(nx,ny,nz);
       cuz=zeros(nx,ny,nz);

       cux = - dxuxx-dyuxy-dzuxz
             + dxuxx.*uxx.*gxx./2  + dyuxx.*uxy.*gxx./2  + dzuxx.*uxz.*gxx./2 ...
             + dxuxy.*uxx.*gxy + dyuxy.*uxy.*gxy + dzuxy.*uxz.*gxy ...
             + dxuxz.*uxx.*gxz + dyuxz.*uxy.*gxz + dzuxz.*uxz.*gxz ...
             + dxuyy.*uxx.*gyy./2 + dyuyy.*uxy.*gyy./2 + dzuyy.*uxz.*gyy./2 ...
             + dxuyz.*uxx.*gyz + dyuyz.*uxy.*gyz + dzuyz.*uxz.*gyz ...
             + dxuzz.*uxx.*gzz./2 + dyuzz.*uxy.*gzz./2 + dzuzz.*uxz.*gzz./2;


        cuy = - dxuxy - dyuyy - dzuyz
            + dxuxx.*uxy.*gxx./2+ dyuxx.*uyy.*gxx./2 + dzuxx.*uyz.*gxx./2 ...
            + dxuxy.*uxy.*gxy+ dyuxy.*uyy.*gxy+ dzuxy.*uyz.*gxy ...
            + dxuxz.*uxy.*gxz+ dyuxz.*uyy.*gxz+ dzuxz.*uyz.*gxz ...
            + dxuyy.*uxy.*gyy./2+ dyuyy.*uyy.*gyy./2+ dzuyy.*uyz.*gyy./2 ...
            + dxuyz.*uxy.*gyz+ dyuyz.*uyy.*gyz+ dzuyz.*uyz.*gyz ...
            + dxuzz.*uxy.*gzz./2+ dyuzz.*uyy.*gzz./2+ dzuzz.*uyz.*gzz./2;


        cuz = - dxuxz - dyuyz - dzuzz ...
            + dxuxx.*uxz.*gxx./2+ dyuxx.*uyz.*gxx./2 + dzuxx.*uzz.*gxx./2 ...
            + dxuxy.*uxz.*gxy+ dyuxy.*uyz.*gxy+ dzuxy.*uzz.*gxy ...
            + dxuxz.*uxz.*gxz+ dyuxz.*uyz.*gxz+ dzuxz.*uzz.*gxz ...
            + dxuyy.*uxz.*gyy./2+ dyuyy.*uyz.*gyy./2+ dzuyy.*uzz.*gyy./2 ...
            + dxuyz.*uxz.*gyz+ dyuyz.*uyz.*gyz+ dzuyz.*uzz.*gyz ...
            + dxuzz.*uxz.*gzz./2+ dyuzz.*uyz.*gzz./2+ dzuzz.*uzz.*gzz./2;


