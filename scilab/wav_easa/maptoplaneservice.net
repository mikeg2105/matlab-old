//
// time: Wed Mar 29 13:59:37 2006
//
// version: 3.2.0 (format), 4.4.0 (DX)
//
//
// MODULE main
// workspace: width = 627, height = 432
// layout: snap = 0, width = 50, height = 50, align = UL
//
macro main(
) -> (
) {
    // 
    // node Scalar[1]: x = 47, y = 4, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.0
    //
    // 
    // node DXLInput[3]: x = 9, y = 104, inputs = 1, label = inmaptoplane_max
    //
    main_DXLInput_3_in_1 = main_Scalar_1_out_1;
    inmaptoplane_max = main_DXLInput_3_in_1;
    main_DXLInput_3_out_1 = inmaptoplane_max;
    // 
    // node DXLOutput[1]: x = 15, y = 189, inputs = 2, label = maptoplane_max
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "maptoplane_max"
    //
    DXLOutput(
    main_DXLOutput_1_in_1,
    main_DXLInput_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Vector[1]: x = 178, y = 25, inputs = 11, label = Vector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Vector_1"
    // input[3]: defaulting = 0, visible = 0, type = 8, value = [ 10000 5000 5000 ]
    // input[5]: defaulting = 1, visible = 0, type = 8, value = [ 0.0 0.0 0.0 ]
    // input[6]: defaulting = 1, visible = 0, type = 8, value = [ 70000.0 70000.0 70000.0 ]
    // input[7]: defaulting = 1, visible = 0, type = 8, value = [       1000        1000        1000]
    // input[9]: defaulting = 1, visible = 0, type = 8, value = [ 1.0 1.0 1.0 ]
    // output[1]: visible = 1, type = 8, value = [ 10000 5000 5000 ]
    //
    // 
    // node DXLOutput[5]: x = 144, y = 301, inputs = 2, label = maptoplane_point
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "maptoplane_point"
    //
    DXLOutput(
    main_DXLOutput_5_in_1,
    main_Vector_1_out_1
    ) [instance: 5, cache: 1];
    // 
    // node IntegerList[1]: x = 319, y = 19, inputs = 11, label = IntegerList
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "IntegerList_1"
    // input[3]: defaulting = 0, visible = 0, type = 16777217, value = { -1, 0, 1, 2, 3 }
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 3
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 16777217, value = { -1, 0, 1, 2, 3 }
    //
    // 
    // node Integer[1]: x = 419, y = 108, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 1, value = -1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 3
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0
    //
main_Integer_1_out_1[cache: 2] = 
    Integer(
    main_Integer_1_in_1,
    main_IntegerList_1_out_1,
    main_Integer_1_in_3,
    main_Integer_1_in_4,
    main_Integer_1_in_5,
    main_Integer_1_in_6,
    main_Integer_1_in_7,
    main_Integer_1_in_8,
    main_Integer_1_in_9,
    main_Integer_1_in_10,
    main_Integer_1_in_11
    ) [instance: 1, cache: 1];
    // 
    // node DXLOutput[6]: x = 418, y = 188, inputs = 2, label = status0
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "status0"
    //
    DXLOutput(
    main_DXLOutput_6_in_1,
    main_Integer_1_out_1
    ) [instance: 6, cache: 1];
    // 
    // node StringList[1]: x = 419, y = 20, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "inmaptoplane_max" }
    //
    // 
    // node DXLOutput[7]: x = 491, y = 188, inputs = 2, label = inputs0
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "inputs0"
    //
    DXLOutput(
    main_DXLOutput_7_in_1,
    main_StringList_1_out_1
    ) [instance: 7, cache: 1];
    // 
    // node StringList[2]: x = 513, y = 22, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "maptoplane_point", "file_to_import" }
    //
    // 
    // node DXLOutput[8]: x = 565, y = 188, inputs = 2, label = outputs0
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "outputs0"
    //
    DXLOutput(
    main_DXLOutput_8_in_1,
    main_StringList_2_out_1
    ) [instance: 8, cache: 1];
    // 
    // node String[1]: x = 50, y = 276, inputs = 0, label = String
    // output[1]: visible = 1, type = 32, value = "temperature"
    //
    // 
    // node DXLOutput[9]: x = 27, y = 370, inputs = 2, label = file_to_import
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "file_to_import"
    //
    DXLOutput(
    main_DXLOutput_9_in_1,
    main_String_1_out_1
    ) [instance: 9, cache: 1];
// network: end of macro body
}
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 0.0;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 0.0;
inmaptoplane_max = NULL;
main_DXLOutput_1_in_1 = "maptoplane_max";
main_Vector_1_in_1 = "Vector_1";
main_Vector_1_in_2 = NULL;
main_Vector_1_in_3 = [ 10000 5000 5000 ];
main_Vector_1_in_4 = NULL;
main_Vector_1_in_5 = NULL;
main_Vector_1_in_6 = NULL;
main_Vector_1_in_7 = NULL;
main_Vector_1_in_8 = NULL;
main_Vector_1_in_9 = NULL;
main_Vector_1_in_10 = NULL;
main_Vector_1_in_11 = NULL;
main_Vector_1_out_1 = [ 10000 5000 5000 ];
main_DXLOutput_5_in_1 = "maptoplane_point";
main_IntegerList_1_in_1 = "IntegerList_1";
main_IntegerList_1_in_2 = NULL;
main_IntegerList_1_in_3 = { -1, 0, 1, 2, 3 };
main_IntegerList_1_in_4 = NULL;
main_IntegerList_1_in_5 = NULL;
main_IntegerList_1_in_6 = NULL;
main_IntegerList_1_in_7 = NULL;
main_IntegerList_1_in_8 = NULL;
main_IntegerList_1_in_9 = NULL;
main_IntegerList_1_in_10 = NULL;
main_IntegerList_1_in_11 = NULL;
main_IntegerList_1_out_1 = { -1, 0, 1, 2, 3 };
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_3 = 0;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 0;
main_DXLOutput_6_in_1 = "status0";
main_StringList_1_out_1 = { "inmaptoplane_max" };
main_DXLOutput_7_in_1 = "inputs0";
main_StringList_2_out_1 = { "maptoplane_point", "file_to_import" };
main_DXLOutput_8_in_1 = "outputs0";
main_String_1_out_1 = "temperature";
main_DXLOutput_9_in_1 = "file_to_import";
Executive("product version 4 4 0");
$sync
// This network contains DXLink tools.  Therefore, the following line(s)
// that would cause an execution when run in script mode have been 
// commented out.  This will facilitate the use of the DXLink routines
// exDXLLoadScript() and DXLLoadVisualProgram() when the DXLink
// application is connected to an executive.
// main();
